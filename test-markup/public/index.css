.success__icon {
  background: url("sprite/sprite.png") 0px 0px;
  width: 120px;
  height: 120px;
}
.main-nav__button--cross:after {
  background: url("sprite/sprite.png") -135px -37px;
  width: 24px;
  height: 24px;
}
.main-nav__button--hamburger:after {
  background: url("sprite/sprite.png") -135px 0px;
  width: 30px;
  height: 22px;
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre,
a,
abbr,
acronym,
address,
code,
del,
dfn,
em,
img,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
caption,
tbody,
tfoot,
thead,
tr {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
main {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]),
[hidden] {
  display: none;
}
article,
details,
section,
summary,
aside,
main,
menu,
nav,
figcaption,
figure,
footer,
header,
hgroup {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  min-width: 300px;
}
.ie-placeholder {
  color: #aaa;
}
html {
  font-size: 14px;
}
@font-face {
  font-family: MuseoSansBlack;
  src: url("fonts/MuseoSansBlack/MuseoSansBlack.eot");
  src: url("fonts/MuseoSansBlack/MuseoSansBlack.eot?#iefix") format('embedded-opentype'), url("fonts/MuseoSansBlack/MuseoSansBlack.woff") format('woff'), url("fonts/MuseoSansBlack/MuseoSansBlack.ttf") format('truetype');
  font-weight: 900;
}
@font-face {
  font-family: MuseoSansMedium;
  src: url("fonts/MuseoSansMedium/MuseoSansMedium.eot");
  src: url("fonts/MuseoSansMedium/MuseoSansMedium.eot?#iefix") format('embedded-opentype'), url("fonts/MuseoSansMedium/MuseoSansMedium.woff") format('woff'), url("fonts/MuseoSansMedium/MuseoSansMedium.ttf") format('truetype');
  font-weight: 500;
}
@font-face {
  font-family: MuseoCyrl-700;
  src: url("fonts/MuseoCyrl700/MuseoCyrl-700.eot");
  src: url("fonts/MuseoCyrl700/MuseoCyrl-700.eot?#iefix") format('embedded-opentype'), url("fonts/MuseoCyrl700/MuseoCyrl-700.otf") format('opentype'), url("fonts/MuseoCyrl700/MuseoCyrl-700.woff") format('woff'), url("fonts/MuseoCyrl700/MuseoCyrl-700.ttf") format('truetype'), url("fonts/MuseoCyrl700/MuseoCyrl-700.svg#MuseoCyrl-700") format('svg');
  font-weight: normal;
}
.header__wrapper {
  width: 100%;
  background: #47586b url("partials/header/bg-header.jpg") center center;
  background-size: cover;
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-orient: vertical;
  -o-box-orient: vertical;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -o-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-box-align: center;
  -o-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 500px;
}
.header__container {
  width: 100%;
  max-width: 960px;
}
.header__container--topline {
  height: 100px;
}
.header__container--divider {
  max-width: 100%;
  height: 2px;
  background-color: rgba(255,255,255,0.2);
}
.header__container--main {
  -webkit-box-flex: 1;
  -o-box-flex: 1;
  box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-orient: vertical;
  -o-box-orient: vertical;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: distribute;
  -o-box-pack: distribute;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -webkit-box-align: center;
  -o-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-height: 480px;
}
.header__container--topline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-pack: justify;
  -o-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: relative;
  z-index: 2;
}
.header__logo {
  background: url("partials/header/logo.png") no-repeat;
  background-position-y: center;
  background-size: contain;
  height: 90%;
  min-width: 150px;
  -webkit-box-flex: 1;
  -o-box-flex: 1;
  box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: auto;
  margin-left: 10px;
  margin-right: 20px;
}
.header__main-nav {
  position: absolute;
  top: 102px;
  left: 0;
  right: 0;
}
@media (min-width: 870px) {
  .header__main-nav {
    position: static;
    display: -webkit-box;
    display: -ms-flexbox;
    display: box;
    display: flex;
    -webkit-box-align: center;
    -o-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}
.main-nav__button {
  cursor: pointer;
  -webkit-tap-highlight-color: rgba(255,255,255,0);
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  position: absolute;
  top: -102px;
  right: 0;
  width: 60px;
  height: 102px;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}
.main-nav__button:after {
  content: '';
  margin: auto;
}
.main-nav__button--cross {
  background-color: #30465e;
}
@media (min-width: 870px) {
  .main-nav__button {
    display: none;
  }
}
.main-nav__mask {
  overflow: hidden;
}
.main-nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
  -webkit-box-orient: vertical;
  -o-box-orient: vertical;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}
.main-nav__list--open {
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}
@media (min-width: 870px) {
  .main-nav__list {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    -webkit-box-orient: horizontal;
    -o-box-orient: horizontal;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}
.main-nav__link {
  color: #fff;
  background-color: #30465e;
  border-top: 1px solid rgba(255,255,255,0.2);
  font-size: 1rem;
  line-height: 60px;
  text-transform: uppercase;
  font-family: sans-serif;
  text-decoration: none;
  margin: 0;
  padding-left: 20px;
}
.main-nav__link:hover {
  text-decoration: underline;
}
.main-nav__link:first-of-type {
  border-top: none;
}
@media (min-width: 870px) {
  .main-nav__link {
    background-color: transparent;
    border: none;
    margin: auto 20px;
    padding: 0;
  }
}
.header__title {
  font-size: 2rem;
  line-height: 1.4;
  color: #fff;
  text-align: center;
  padding: 0 15px;
}
@media (max-width: 870px) {
  .header__title br {
    display: none;
  }
}
.header__request {
  width: 270px;
  position: relative;
}
.request__form {
  background-color: rgba(255,255,255,0.2);
  border-radius: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-orient: vertical;
  -o-box-orient: vertical;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 40px;
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  position: relative;
  z-index: 1;
}
.request__form--submitted {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}
@media (min-width: 870px) {
  .request__form--submitted {
    opacity: 1;
    -ms-filter: none;
    -webkit-filter: none;
            filter: none;
  }
}
.request__phone,
.request__name,
.request__submit {
  margin-bottom: 20px;
  height: 40px;
  border-radius: 20px;
  border: none;
  padding-left: 20px;
}
.request__submit {
  margin-bottom: 0;
  padding-left: 0;
}
.request__success {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: rgba(255,255,255,0.2);
  border-radius: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-orient: vertical;
  -o-box-orient: vertical;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: distribute;
  -o-box-pack: distribute;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
}
.request__success--submitted {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
}
@media (min-width: 870px) {
  .request__success--submitted {
    left: 110%;
    right: -110%;
  }
}
@media (max-width: 870px) {
  .request__success br {
    display: none;
  }
}
.success__icon {
  margin: 0 auto;
}
.success__text {
  font-size: 1.2rem;
  color: #fff;
  padding: 0 20px;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
